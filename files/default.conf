server {
    listen 80;
    server_name public;
    root /etc/nginx/html;

    set $w "sw";
    if ($arg_w != "") {
        set $w $arg_w;
    }
    set $h "sh";
    if ($arg_h != "") {
        set $h $arg_h;
    }
    set $cw "";
    if ($arg_cw != "") {
        set $cw $arg_cw;
    }
    set $ch "";
    if ($arg_ch != "") {
        set $ch $arg_ch;
    }

    set $format "jpeg";
    if ($webp != "") {
        set $format "webp";
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Send requests for jpg, png, gif, webp to small_light
    location ~ "(^/)(.+(\.(jpg|jpeg|jpe|png|gif|webp))$)" {
        proxy_pass http://localhost:8080/small_light(p=$format,dw=$w,dh=$h,cw=$cw,ch=$ch)$2?$args;
        proxy_cache static;
        proxy_cache_valid 200 10080m;
        proxy_cache_bypass $http_secret_header;
        expires max;
        add_header Cache-Control public;
        add_header X-Cache-Status $upstream_cache_status;
        proxy_ignore_headers Set-Cookie Cache-Control;
        proxy_hide_header X-Powered-By;
    }

    location ~ ^/small_light {
        # Nginx needs you to manually define DNS resolution when using
        # variables in proxy_pass. Creating this dummy location avoids that.
        # The error is: "no resolver defined to resolve localhost".
        proxy_pass http://localhost:8080;
    }

    # Send requests for svg, pdf, doc, docx and ico straight to upstream
    location ~ ^/.+\.(svg|pdf|doc|docx|ico) {
        proxy_pass http://localhost:8081;
        proxy_cache static;
        proxy_cache_valid 200 10080m;
        proxy_cache_bypass $http_secret_header;
        expires max;
        add_header Cache-Control public;
        add_header X-Cache-Status $upstream_cache_status;
        proxy_ignore_headers Set-Cookie Cache-Control;
        proxy_hide_header X-Powered-By;
    }
}

server {
        resolver 8.8.8.8;

        listen 8080;
        server_name small_light;

        set $quality 50;
        small_light on;
        small_light_pattern_define webp of=webp,q=$quality,cc=ffffff;
        small_light_pattern_define jpeg jpeghint=y,progressive=y,rmprof=y,q=$quality,cc=ffffff;
        small_light_buffer 10M;

        location ~ small_light[^/]*\)(.+)$ {
            set $file $1;
            proxy_pass http://127.0.0.1:8081/$file;
            allow 127.0.0.0/8;
            deny all;
        }

        location ~ ^/content/(.*)$ {}
}

server {
    resolver 8.8.8.8;

    listen 8081;
    server_name content;

    location ~ ^/.+\.(jpg|jpeg|jpe|png|gif|webp|svg|pdf|doc|docx|ico) {
        proxy_pass http://backend;
    }
}